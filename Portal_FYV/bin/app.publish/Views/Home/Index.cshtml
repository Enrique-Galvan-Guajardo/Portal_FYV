@{
    ViewBag.Title = "Página principal";
    string rol = Session["Rol"] != null ? Session["Rol"].ToString() : "";
    string sucursal = Session["Sucursal"] != null ? Session["Sucursal"].ToString() : "";
    int id = Convert.ToInt32(Session["Id_Usuario"]);

    // Obtener la lista de REQHDR de la ViewBag
    IEnumerable<Portal_FYV.Models.REQHDR> rEQHDRs = ViewBag.totalRegistrosFiltrados != null ? ViewBag.totalRegistrosFiltrados : new List<Portal_FYV.Models.REQHDR>();

    IEnumerable<Portal_FYV.Models.REQDET> rEQDETs = ViewBag.totalReqdets != null ? ViewBag.totalReqdets : new List<Portal_FYV.Models.REQDET>();
    string[] rEQDETsdescripciones = rEQDETs.Select(x => x.Descripcion).ToArray();

    IEnumerable<Portal_FYV.Models.Producto> productos = new List<Portal_FYV.Models.Producto>();
    string[] productosDescripciones = new string[0];
    int[] productosIds = new int[0];
    IEnumerable<Portal_FYV.Models.UsuariosProductos> precios = new List<Portal_FYV.Models.UsuariosProductos>();
    List<Portal_FYV.Models.UsuariosProductos> uspr = new List<Portal_FYV.Models.UsuariosProductos>();
    // Obtener la fecha de inicio y fin del mes actual
    DateTime fechaInicioMes = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1);
    //DateTime fechaFinMes = fechaInicioMes.AddMonths(1).AddDays(-1);
    DateTime fechaFinMes = fechaInicioMes.AddMonths(1);
    // Consultar la cantidad de registros en el rango de fechas del mes actual
    //ViewBag.totalRegistrosFiltrados = db.REQHDRs.Where(r => r.Fecha_creacion >= fechaInicioMes && r.Fecha_creacion <= fechaFinMes);
    // Convertir a lista

    IEnumerable<Portal_FYV.Models.OrdenCompra_Web> ordenCompras = ViewBag.ordenCompra != null ? ViewBag.ordenCompra : new List<Portal_FYV.Models.OrdenCompra_Web>();

}
<script src="~/Scripts/RegionsController.js"></script>

@if (Session["Id_Usuario"] == null)
{
    <div class="card my-5 shadow-lg">
        <div class="card-header">
            <div class="nav nav-tabs card-header-tabs" id="nav-tab" role="tablist">
                <button class="nav-link active" id="nav-login-tab" data-bs-toggle="tab" data-bs-target="#nav-login" type="button" role="tab" aria-controls="nav-login" aria-selected="true"><i class="bi bi-box-arrow-in-right me-2"></i>Iniciar Sesión</button>
                <button class="nav-link" id="nav-signup-tab" data-bs-toggle="tab" data-bs-target="#nav-signup" type="button" role="tab" aria-controls="nav-signup" aria-selected="false"><i class="bi bi-pencil-square me-2"></i>Crear cuenta</button>
            </div>
        </div>
        <div class="card-body">
            <div class="tab-content" id="nav-tabContent">
                <div class="tab-pane fade show active" id="nav-login" role="tabpanel" aria-labelledby="nav-login-tab" tabindex="0">
                    @if (!string.IsNullOrEmpty(Request.QueryString["Message"]))
                    {
                        <div class="alert alert-@Html.Raw(Server.UrlDecode(Request.QueryString["Message_Classes"])) alert-dismissible fade show" role="alert">
                            @Html.Raw(Server.UrlDecode(Request.QueryString["Message"]))
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    @using (Html.BeginForm("logIn", "Usuarios", FormMethod.Post))
                    {
                        <p>
                            <small class="text-muted">Ingresa tus credenciales para acceder a la plataforma.</small>
                        </p>
                        <div class="mb-3">
                            <label for="user_session" class="form-label">Usuario o correo:</label>
                            <input type="text" class="form-control" id="user_session" name="user_session" placeholder="usuario@ejemplo.com">
                        </div>
                        <div class="mb-3">
                            <label for="user_password" class="form-label">Contraseña:</label>
                            <input type="password" class="form-control" id="user_password" name="user_password">
                        </div>
                        <button type="submit" id="login-form-submit" class="btn btn-primary">Acceder</button>
                    }
                </div>

                <div class="tab-pane fade" id="nav-signup" role="tabpanel" aria-labelledby="nav-signup-tab" tabindex="0">
                    @using (Html.BeginForm("CreateAccount", "Usuarios", FormMethod.Post, new { @class = "w-100" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="row m-0">
                            <p>
                                <small class="text-muted">Crea tu usuario, estará disponible cuando sea validado por un administrador.</small>
                            </p>
                            <div class="col-12 col-sm-12 col-md-6">
                                <div class="mb-3">
                                    <label for="Correo" class="form-label">Correo:</label>
                                    <input type="email" class="form-control" id="Correo" name="Correo" placeholder="usuario@ejemplo.com">
                                </div>
                                <div class="mb-3">
                                    <label for="Contrasena" class="form-label">Contraseña:</label>
                                    <input type="password" class="form-control" id="Contrasena" name="Contrasena">
                                </div>
                                <div class="form-check form-switch my-4">
                                    <input class="form-check-input" type="checkbox" id="is_provider">
                                    <label class="form-check-label" for="is_provider">Soy proveedor</label>
                                </div>
                            </div>
                            <script>
                                document.querySelector('#is_provider').addEventListener('change', function () {
                                    console.log(this.checked)
                                    $(".provider_opts").slideToggle("slow");
                                    cambiarAction(this.checked, this.closest('form'));
                                })

                                // Función para cambiar el action del formulario y habilitar/deshabilitar elementos
                                function cambiarAction(is_Checked, formElement) {
                                    if (is_Checked) {
                                        formElement.action = '/Usuarios/Create';
                                        // Habilita los elementos
                                        document.getElementById('Calle').disabled = false;
                                        document.getElementById('Calle').disabled = false;
                                        document.getElementById('Numero').disabled = false;
                                        // Establece la propiedad required
                                        document.getElementById('Calle').required = true;
                                        document.getElementById('Numero').required = true;
                                    } else {
                                        formElement.action = '/Usuarios/CreateAccount';
                                        // Deshabilita los elementos
                                        document.getElementById('Calle').disabled = true;
                                        document.getElementById('Numero').disabled = true;
                                        // Elimina la propiedad required
                                        document.getElementById('Calle').required = false;
                                        document.getElementById('Numero').required = false;
                                    }
                                }
                            </script>
                            <!---->
                            <div class="col-12 col-sm-12 col-md-6 row m-0 p-0 gap-5 provider_opts" style="display:none;">
                                <div class="col-12 col-sm-12 col-md-12 row m-0 p-0">
                                    <h4 class="text-muted mb-4">Información de dirección</h4>
                                    <hr />
                                    <div class="mb-3 col-12 col-sm-6">
                                        <label for="Estado" class="form-label">Estado</label>
                                        <select id="Estado" name="Estado" class="form-select" required>
                                            <option>Selecciona</option>
                                        </select>
                                    </div>
                                    <div class="mb-3 col-12 col-sm-6">
                                        <label for="Municipio" class="form-label">Municipio</label>
                                        <select id="Municipio" name="Municipio" class="form-select" required>
                                            <option>Selecciona</option>
                                        </select>
                                    </div>
                                    <div class="mb-3 col-12 col-sm-6">
                                        <label for="Colonia" class="form-label">Colonia</label>
                                        <select id="Colonia" name="Colonia" class="form-select" required>
                                            <option>Selecciona</option>
                                        </select>
                                    </div>
                                    <div class="mb-3 col-12 col-sm-6">
                                        <label for="Localidad" class="form-label">Localidad</label>
                                        <select id="Localidad" name="Localidad" class="form-select" required>
                                            <option>Selecciona</option>
                                        </select>
                                    </div>
                                    <div class="mb-3 col-12 col-sm-6">
                                        <label for="Calle" class="form-label">Calle:</label>
                                        <input type="text" class="form-control" id="Calle" name="Calle" placeholder="Calle...">
                                    </div>
                                    <div class="mb-3 col-12 col-sm-6">
                                        <label for="Numero" class="form-label">Número:</label>
                                        <input type="text" class="form-control" id="Numero" name="Numero" placeholder="Número...">
                                    </div>
                                    <script>
                                        addEvents(["Estado", "Municipio", "Colonia", "Localidad"])
                                    </script>
                                </div>
                                <div class="col-12 col-sm-12 col-md-12">
                                    <h4 class="text-muted mb-4">Información de contacto</h4>
                                    <hr />
                                    <p class="d-flex justify-content-between">
                                        <button class="btn btn-primary" type="button" id="btncontactName" data-bs-toggle="collapse" data-bs-target="#contactName" aria-expanded="false" aria-controls="contactName">Nombres</button>
                                        <button class="btn btn-primary" type="button" id="btncontactEmail" data-bs-toggle="collapse" data-bs-target="#contactEmail" aria-expanded="false" aria-controls="contactEmail">Correos</button>
                                        <button class="btn btn-primary" type="button" id="btncontactTel" data-bs-toggle="collapse" data-bs-target="#contactTel" aria-expanded="false" aria-controls="contactTel">Teléfonos</button>
                                    </p>
                                    <script>
                                        document.querySelector('#btncontactName').addEventListener('click', function () {
                                            document.querySelector('#contactEmail').classList.contains('show') ? document.querySelector('#btncontactEmail').click() : null;
                                            document.querySelector('#contactTel').classList.contains('show') ? document.querySelector('#btncontactTel').click() : null;
                                        })

                                        document.querySelector('#btncontactEmail').addEventListener('click', function () {
                                            document.querySelector('#contactName').classList.contains('show') ? document.querySelector('#btncontactName').click() : null;
                                            document.querySelector('#contactTel').classList.contains('show') ? document.querySelector('#btncontactTel').click() : null;
                                        })

                                        document.querySelector('#btncontactTel').addEventListener('click', function () {
                                            document.querySelector('#contactName').classList.contains('show') ? document.querySelector('#btncontactName').click() : null;
                                            document.querySelector('#contactEmail').classList.contains('show') ? document.querySelector('#btncontactEmail').click() : null;
                                        })
                                    </script>
                                    <div class="collapse show" id="contactName">
                                        <div class="mb-3">
                                            <label for="Contacto_nombre1" class="form-label">Contacto 1:</label>
                                            <input type="text" class="form-control" id="Contacto_nombre1" name="Contacto_nombre1" placeholder="Contacto 1...">
                                        </div>
                                        <div class="mb-3">
                                            <label for="Contacto_nombre2" class="form-label">Contacto 2:</label>
                                            <input type="text" class="form-control" id="Contacto_nombre2" name="Contacto_nombre2" placeholder="Contacto 2...">
                                        </div>
                                        <div class="mb-3">
                                            <label for="Contacto_nombre3" class="form-label">Contacto 3:</label>
                                            <input type="text" class="form-control" id="Contacto_nombre3" name="Contacto_nombre3" placeholder="Contacto 3...">
                                        </div>
                                    </div>
                                    <div class="collapse" id="contactEmail">
                                        <div class="mb-3">
                                            <label for="Contacto_correo1" class="form-label">Correo 1:</label>
                                            <input type="email" class="form-control" id="Contacto_correo1" name="Contacto_correo1" placeholder="Correo 1...">
                                        </div>
                                        <div class="mb-3">
                                            <label for="Contacto_correo2" class="form-label">Correo 2:</label>
                                            <input type="email" class="form-control" id="Contacto_correo2" name="Contacto_correo2" placeholder="Correo 2...">
                                        </div>
                                        <div class="mb-3">
                                            <label for="Contacto_correo3" class="form-label">Correo 3:</label>
                                            <input type="email" class="form-control" id="Contacto_correo3" name="Contacto_correo3" placeholder="Correo 3...">
                                        </div>
                                    </div>
                                    <div class="collapse" id="contactTel">
                                        <div class="mb-3">
                                            <label for="Contacto_telefono1" class="form-label">Teléfono 1:</label>
                                            <input type="text" class="form-control" id="Contacto_telefono1" name="Contacto_telefono1" placeholder="Teléfono 1...">
                                        </div>
                                        <div class="mb-3">
                                            <label for="Contacto_telefono2" class="form-label">Teléfono 2:</label>
                                            <input type="text" class="form-control" id="Contacto_telefono2" name="Contacto_telefono2" placeholder="Teléfono 2...">
                                        </div>
                                        <div class="mb-3">
                                            <label for="Contacto_telefono3" class="form-label">Teléfono 3:</label>
                                            <input type="text" class="form-control" id="Contacto_telefono3" name="Contacto_telefono3" placeholder="Teléfono 3...">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary">Crear</button>
                    }



                </div>
            </div>

        </div>
    </div>
}
else
{

    //Cualquiera excepto Proveedores
    if (rol != "Proveedores")
    {
        <div class="card my-5 shadow-lg">
            <div class="card-header">
                <h2 class="my-3">Búsqueda de solicitudes por fechas</h2>
            </div>
            <div class="card-body">
                <div class="tab-content">
                    @using (Html.BeginForm("Consolidation", "REQHDRs", FormMethod.Post, null))
                    {
                        <div class="d-none">
                            <p class="text-muted">
                                Solicitudes validadas este mes: @(rEQHDRs.Where(x => x.Estatus == 2).Count())
                            </p>
                            <p class="text-muted">
                                Solicitudes pendientes este mes: @(rEQHDRs.Where(x => x.Estatus == 1).Count())
                            </p>
                            <p class="text-muted">
                                Solicitudes canceladas este mes: @(rEQHDRs.Where(x => x.Estatus == 0).Count())
                            </p>
                        </div>
                        <div class="row mx-0 justify-content-center">
                            <div class="col-12 col-sm-12 col-md-4">
                                <label class="form-label">Fecha inicial:</label>
                                <input type="date" class="form-control" name="startDate" id="startDate" required="required" />
                            </div>

                            <div class="col-12 col-sm-12 col-md-4">
                                <label class="form-label">Fecha final:</label>
                                <input type="date" class="form-control" name="endDate" id="endDate" required="required" />
                            </div>

                            <div class="col-12 col-sm-12 col-md-12">
                                <button type="submit" class="btn btn-lg btn-primary mb-3">Buscar</button>
                            </div>
                        </div>

                        <div class="accordion" id="accordionExample">
                            <div class="accordion-item">
                                <h2 class="accordion-header">
                                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                        Lista de solicitudes
                                    </button>
                                </h2>
                                <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
                                    <div class="accordion-body">
                                        <div class="list-group">
                                            @{
                                                var solicitudes = rEQHDRs.OrderByDescending(x => x.Fecha_creacion).Where(x => Convert.ToDateTime(x.Fecha_creacion).ToString("d") == DateTime.Now.ToString("d")).Select(x => Convert.ToDateTime(x.Fecha_creacion).ToString("D")).Distinct();
                                                if (solicitudes.Count() > 0)
                                                {

                                                    foreach (var item in solicitudes)
                                                    {
                                                        DateTime fechaval = Convert.ToDateTime(item);
                                                        string fechaEncoded = HttpUtility.UrlEncode(fechaval.ToString("yyyy-MM-dd"));
                                                        int todayCount = rEQHDRs.Where(x => Convert.ToDateTime(x.Fecha_creacion).ToString("d") == fechaval.ToString("d")).Count();
                                                        int todayCountTrue = rEQHDRs.Where(x => Convert.ToDateTime(x.Fecha_creacion).ToString("d") == fechaval.ToString("d") && x.Estatus == 2).Count();
                                                        <a @if (todayCount == todayCountTrue) { <text> href="#" </text>  } else { <text> href="/REQHDRs/Consolidation/?startDate=@fechaEncoded&endDate=@fechaEncoded" </text>  }
                                                           class="list-group-item list-group-item-action" aria-current="true">
                                                            <b class="@(todayCount == todayCountTrue ? "text-success" : "text-primary") text-opacity-75">@todayCount solicitudes en @fechaval.ToString("D", new System.Globalization.CultureInfo("es-ES"))</b>
                                                            <br />
                                                            <small class="text-muted">Aprobados: @todayCountTrue</small>
                                                        </a>
                                                        if (todayCount != todayCountTrue)
                                                        {
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    <a href="#" class="list-group-item list-group-item-action" aria-current="true">
                                                        <b class="text-muted text-opacity-75">Sin solicitudes encontradas</b>
                                                    </a>
                                                }
                                            }

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="accordion-item">
                                <h2 class="accordion-header">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                        Ordenes de compras
                                    </button>
                                </h2>
                                <div id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                                    <div class="accordion-body">
                                        <div class="list-group">

                                            @{
                                                //var ordenes = ordenCompras.Where(x => Convert.ToDateTime(x.Fecha_creacion).ToString("d") == DateTime.Now.ToString("d")).OrderByDescending(x => x.Fecha_creacion).ToList();
                                                var ordenes = ordenCompras.OrderByDescending(x => x.Fecha_creacion).ToList();
                                                var ordenes_dias = ordenCompras.OrderByDescending(x => x.Fecha_creacion).Select(x => Convert.ToDateTime(x.Fecha_creacion).ToString("d")).Distinct();

                                                if (ordenes_dias.Count() > 0)
                                                {
                                                    foreach (var dia in ordenes_dias)
                                                    {
                                                        var arr_reqhdrs_dia = ordenes.Where(x => Convert.ToDateTime(x.Fecha_creacion).ToString("d") == dia).Select(x => x.REQHDRS).ToArray();
                                                        var arr_reqhdrs_dia_ind = ordenes
                                                        .Where(x => Convert.ToDateTime(x.Fecha_creacion).ToString("d") == dia)
                                                        .SelectMany(x => x.REQHDRS.Split('-'))
                                                        .Distinct()
                                                        .OrderByDescending(x => x)
                                                        .ToList();
                                                        <div class="list-group-item list-group-item-action">
                                                            <a href="@Url.Action("Compra", "REQHDRs", new { REQHDRS = String.Join("-", arr_reqhdrs_dia_ind) })" class="text-decoration-none" aria-current="true">
                                                                <b class="text-primary text-opacity-75">@arr_reqhdrs_dia.Count() orden en @Convert.ToDateTime(dia).ToString("D", new System.Globalization.CultureInfo("es-ES"))</b>
                                                            </a>
                                                            <details>
                                                                <summary class="text-muted">
                                                                    Ver proveedores
                                                                </summary>
                                                                <div class="row mx-0">
                                                                    <div class="col-12 col-sm-12 col-md-6 my-3">
                                                                        <div class="col-12">
                                                                            <ul class="m-0 text-dark">
                                                                            @foreach (var proveedor in ordenCompras.Where(x => Convert.ToDateTime(x.Fecha_creacion).ToString("d") == dia).Select(x => x.Proveedor).OrderBy(x => x))
                                                                            {
                                                                                <li>
                                                                                    @proveedor
                                                                                </li>
                                                                            }
                                                                            </ul>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </details>
                                                        </div>
                                                    }
                                                }
                                                else
                                                {
                                                    <a href="#" class="list-group-item list-group-item-action" aria-current="true">
                                                        <b class="text-muted text-opacity-75">Sin ordenes encontradas</b>
                                                    </a>
                                                }
                                            }

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    }
                </div>

            </div>
        </div>
    }

    <ul class="d-none">
        @foreach (var item in rEQHDRs)
        {
            <li>@item</li>
        }
    </ul>


    //Todos
    <div class="card my-5 shadow-lg">
        <div class="card-header">
            <h2 class="my-3">Solicitudes disponibles</h2>
        </div>
        <div class="card-body">
            <div class="tab-content">
                @{
                    switch (rol)
                    {
                        case "Admin+":
                        case "Admin":
                        case "Compras":

                            productos = ViewBag.totalProductos != null ? ViewBag.totalProductos : new List<Portal_FYV.Models.Producto>();
                            productosDescripciones = productos != null ? productos.Select(x => x.Descripcion).Distinct().ToArray() : null;
                            productosIds = productos != null ? productos.Select(x => x.Id_Producto).Distinct().ToArray() : null;
                            precios = ViewBag.totalPrecios != null ? ViewBag.totalPrecios : new List<Portal_FYV.Models.UsuariosProductos>();

                            uspr = precios.Where(x => x.Precio > 0 && x.Cantidad_comprada > 0).ToList();
                            break;
                        case "Proveedores":
                            rEQHDRs = rEQHDRs.Where(x => x.Estatus == 2).ToList();

                            productos = ViewBag.totalProductos != null ? ViewBag.totalProductos : new List<Portal_FYV.Models.Producto>();
                            productosDescripciones = productos != null ? productos.Select(x => x.Descripcion).Distinct().ToArray() : null;
                            productosIds = productos != null ? productos.Select(x => x.Id_Producto).Distinct().ToArray() : null;
                            precios = ViewBag.totalPrecios != null ? ViewBag.totalPrecios : new List<Portal_FYV.Models.UsuariosProductos>();

                            uspr = precios.Where(x => x.Precio > 0 && x.Cantidad_comprada > 0).ToList();

                            break;

                        default:
                            break;
                    }

                    List<Portal_FYV.Models.REQHDR> rEQHDRs_Mes = rEQHDRs.Where(r => r.Fecha_creacion >= fechaInicioMes && r.Fecha_creacion <= fechaFinMes).ToList();
                }
                <div class="accordion accordion-flush" id="accordionFlushExample">
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
                                Buscar por fecha
                            </button>
                        </h2>
                        <div id="flush-collapseOne" class="accordion-collapse collapse" data-bs-parent="#accordionFlushExample">
                            <div class="accordion-body">
                                @using (Html.BeginForm("Resumen", "REQHDRs", FormMethod.Post, null)) { 
                                    <div class="row mx-0 justify-content-center">
                                        <div class="col-12 col-sm-12 col-md-4">
                                            <label class="form-label">Fecha deseada:</label>
                                            <input type="date" class="form-control" name="searchDate" id="searchDate" required="required" />
                                        </div>

                                        <div class="col-12 col-sm-12 col-md-12">
                                            <button type="submit" class="btn btn-lg btn-primary mb-3">Buscar</button>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseTwo" aria-expanded="false" aria-controls="flush-collapseTwo">
                                Ordenes activas este mes (@(rEQHDRs_Mes.Count()))
                            </button>
                        </h2>
                        <div id="flush-collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionFlushExample">
                            <div class="accordion-body">
                                <div class="list-group">
                                    @foreach (var fecha in rEQHDRs_Mes.OrderByDescending(x => x.Fecha_validacion).Select(x => x.Fecha_validacion.ToString("d")).Distinct())
                                    {
                                        string fechaEncoded = HttpUtility.UrlEncode(Convert.ToDateTime(fecha).ToString("yyyy-MM-dd"));

                                        <div class="list-group-item list-group-item-action">
                                            <div>
                                                <a class="text-decoration-none" href="/REQHDRs/Resumen/?searchDate=@fechaEncoded">
                                                    <b class="text-primary text-opacity-75">Solicitudes aprobadas en @Convert.ToDateTime(fecha).ToString("D", new System.Globalization.CultureInfo("es-ES"))</b>
                                                </a>
                                                <details>
                                                    <summary class="text-muted">
                                                        Información individual
                                                    </summary>
                                                    <div class="row mx-0">
                                                        @foreach (var item in rEQHDRs.Where(x => x.Fecha_validacion.ToString("D") == Convert.ToDateTime(fecha).ToString("D")))
                                                        {
                                                            <div class="col-12 col-sm-12 col-md-6 my-3">
                                                                <div class="col-12 fs-5 fw-medium mb-3">
                                                                    <mark>
                                                                        Solicitud <span class="text-primary">@item.Id_REQHDR</span>
                                                                    </mark>
                                                                </div>
                                                                @switch (rol)
                                                                {
                                                                    case "Admin+":
                                                                    case "Admin":
                                                                    case "Compras":
                                                                        decimal costoTotal = 0;
                                                                        foreach (var calpre in uspr.Where(x => x.Id_REQHDR == item.Id_REQHDR).ToList())
                                                                        {
                                                                            costoTotal += Convert.ToDecimal(calpre.Precio * calpre.Cantidad_comprada);
                                                                        }

                                                                        <div class="col-12">
                                                                            Productos: <span class="text-primary">@rEQDETs.Where(x => x.Id_REQHDR == item.Id_REQHDR).Count()</span>
                                                                        </div>
                                                                        <div class="col-12">
                                                                            Costo total: <span class="text-success text-opacity-75 fw-medium">$@Math.Round(costoTotal, 3)</span>
                                                                        </div>
                                                                        <div class="col-12 d-none">
                                                                            Proveedores disponibles: <span class="text-primary">@productos.Where(x => rEQDETsdescripciones.Contains(x.Descripcion)).Select(x => x.Id_Proveedor).Distinct().Count()</span>
                                                                        </div>
                                                                        <div class="col-12">
                                                                            Productos con precio:
                                                                            <span class="text-muted">@precios.Where(x => x.Id_REQHDR == item.Id_REQHDR && productosIds.Contains(x.Id_Producto) && x.Precio > 0).Select(x => x.Id_Producto).Distinct().Count()</span> /
                                                                            <span class="text-primary">@rEQDETs.Where(x => x.Id_REQHDR == item.Id_REQHDR && x.Cantidad_validada > 0).Select(x => x.Descripcion).Distinct().Count()</span>
                                                                        </div>
                                                                        break;
                                                                    case "Proveedores":
                                                                        <div class="col-12">
                                                                            Productos con precio:
                                                                            <span class="text-muted">@precios.Where(x => x.Id_REQHDR == item.Id_REQHDR && productosIds.Contains(x.Id_Producto) && x.Precio > 0).Select(x => x.Id_Producto).Distinct().Count()</span> /
                                                                            <span class="text-primary">@rEQDETs.Where(x => x.Id_REQHDR == item.Id_REQHDR && productosDescripciones.Contains(x.Descripcion) && x.Cantidad_validada > 0).Select(x => x.Descripcion).Distinct().Count()</span>
                                                                        </div>
                                                                        break;
                                                                    default:
                                                                        break;
                                                                }
                                                            </div>
                                                        }
                                                    </div>
                                                </details>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    @if (rol != "Proveedores" && (rol == "Admin+" || rol == "Admin"))
                    {
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseThree" aria-expanded="false" aria-controls="flush-collapseThree">
                                    Historial (@rEQHDRs.Count())
                                </button>
                            </h2>
                            <div id="flush-collapseThree" class="accordion-collapse collapse" data-bs-parent="#accordionFlushExample">
                                <div class="accordion-body">
                                    <div class="list-group">
                                        @foreach (var fecha in rEQHDRs.OrderByDescending(x => x.Fecha_creacion).Select(x => x.Fecha_creacion.ToString("d")).Distinct())
                                        {
                                            string fechaEncoded = HttpUtility.UrlEncode(Convert.ToDateTime(fecha).ToString("yyyy-MM-dd"));

                                            <div class="list-group-item list-group-item-action">
                                                <div>
                                                    <a class="text-decoration-none" href="/REQHDRs/Resumen/?searchDate=@fechaEncoded">
                                                        <b class="text-primary text-opacity-75">Solicitudes aprobadas en @Convert.ToDateTime(fecha).ToString("D", new System.Globalization.CultureInfo("es-ES"))</b>
                                                    </a>
                                                    <details>
                                                        <summary class="text-muted">
                                                            Información individual
                                                        </summary>
                                                        <div class="row mx-0">
                                                            @foreach (var item in rEQHDRs.Where(x => x.Fecha_validacion.ToString("D") == Convert.ToDateTime(fecha).ToString("D")))
                                                            {
                                                                <div class="col-12 col-sm-12 col-md-6 my-3">
                                                                    <div class="col-12 fs-5 fw-medium mb-3">
                                                                        <mark>
                                                                            Solicitud <span class="text-primary">@item.Id_REQHDR</span>
                                                                        </mark>
                                                                    </div>
                                                                    @switch (rol)
                                                                    {
                                                                        case "Admin+":
                                                                        case "Admin":
                                                                        case "Compras":
                                                                            decimal costoTotal = 0;
                                                                            foreach (var calpre in uspr.Where(x => x.Id_REQHDR == item.Id_REQHDR).ToList())
                                                                            {
                                                                                costoTotal += Convert.ToDecimal(calpre.Precio * calpre.Cantidad_comprada);
                                                                            }

                                                                            <div class="col-12">
                                                                                Productos: <span class="text-primary">@rEQDETs.Where(x => x.Id_REQHDR == item.Id_REQHDR).Count()</span>
                                                                            </div>
                                                                            <div class="col-12">
                                                                                Costo total: <span class="text-success text-opacity-75 fw-medium">$@Math.Round(costoTotal, 3)</span>
                                                                            </div>
                                                                            <div class="col-12 d-none">
                                                                                Proveedores disponibles: <span class="text-primary">@productos.Where(x => rEQDETsdescripciones.Contains(x.Descripcion)).Select(x => x.Id_Proveedor).Distinct().Count()</span>
                                                                            </div>
                                                                            <div class="col-12">
                                                                                Productos con precio:
                                                                                <span class="text-muted">@precios.Where(x => x.Id_REQHDR == item.Id_REQHDR && productosIds.Contains(x.Id_Producto) && x.Precio > 0).Select(x => x.Id_Producto).Distinct().Count()</span> /
                                                                                <span class="text-primary">@rEQDETs.Where(x => x.Id_REQHDR == item.Id_REQHDR && x.Cantidad_validada > 0).Select(x => x.Descripcion).Distinct().Count()</span>
                                                                            </div>
                                                                            break;
                                                                        case "Proveedores":
                                                                            <div class="col-12">
                                                                                Productos con precio:
                                                                                <span class="text-muted">@precios.Where(x => x.Id_REQHDR == item.Id_REQHDR && productosIds.Contains(x.Id_Producto) && x.Precio > 0).Select(x => x.Id_Producto).Distinct().Count()</span> /
                                                                                <span class="text-primary">@rEQDETs.Where(x => x.Id_REQHDR == item.Id_REQHDR && productosDescripciones.Contains(x.Descripcion) && x.Cantidad_validada > 0).Select(x => x.Descripcion).Distinct().Count()</span>
                                                                            </div>
                                                                            break;
                                                                        default:
                                                                            break;
                                                                    }
                                                                </div>
                                                            }
                                                        </div>
                                                    </details>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

            </div>

        </div>
    </div>

    <script>
        function verSeleccionados(list) {
            // Obtener todos los elementos dentro de .list-group
            let items = document.getElementById(list).querySelectorAll('.list-group-item');

            // Crear un arreglo para almacenar los Ids seleccionados
            let rhs = [];

            // Iterar sobre cada elemento dentro de .list-group
            items.forEach(item => {
                // Obtener el checkbox dentro de cada elemento
                let checkbox = item.querySelector('input[type="checkbox"]');

                // Verificar si el checkbox está chequeado
                if (checkbox.checked) {
                    // Obtener el valor del atributo data-idreqhdr del div padre
                    let id = item.dataset.idreqhdr;
                    // Crear un objeto con la estructura requerida
                    let obj = { "Id_REQHDR": parseInt(id) };
                    // Agregar el objeto al arreglo de objetos
                    rhs.push(obj);
                }
            });

            console.log(rhs);

            // Enviar el arreglo de objetos al controlador utilizando AJAX
            /*
            */
            if (rhs.length > 0) {
                $.ajax({
                    url: '/REQHDRs/Resumen',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ rhs }),
                    success: function (response) {
                        // Manejar la respuesta del servidor si es necesario
                        console.log('Datos enviados correctamente');
                        console.log(response);
                    },
                    error: function (xhr, status, error) {
                        // Manejar errores si ocurrieron durante la solicitud AJAX
                        console.error('Error al enviar datos:', error);
                    }
                });
            }
        }
    </script>
}

